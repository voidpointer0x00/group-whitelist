plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

group = 'ru.voidpointer.spigot'
version = '1.0.0'

repositories {
    mavenCentral()
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://repo.aikar.co/content/groups/aikar/' }
}

dependencies {
    /* runtime dependencies */
    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT' /* minecraft server */
    compileOnly 'net.luckperms:api:5.4' /* permissions plugin */
    compileOnly 'org.spongepowered:configurate-yaml:4.1.2' /* yaml configuration */

    /* shaded-in (gradle shadow plugin) */
    implementation 'co.aikar:acf-paper:0.5.1-SNAPSHOT'; /* paper commands framework */

    /* annotations: @NotNull, @Getter, @ThreadSafe etc. */
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    compileOnly 'org.jetbrains:annotations:24.0.1'
    compileOnly 'net.jcip:jcip-annotations:1.0'

    /* test dependencies */
    testImplementation 'org.testng:testng:7.8.0' /* fuck JUnit */
}

test {
    useTestNG()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
